import React, {useEffect, useState} from 'react';

import Box from '../../shared/ui/box/Box'
import NavigationPanel from '../../widgets/navigation_panel/NavigationPanel';

import AppBar from "../../shared/ui/app_bar/AppBar";
import {useAppContext} from "../../context/AppContext";
import {useNavigate} from "react-router-dom";
import GroupInline from "../../shared/ui/group_inline/GroupInline";
import Logo from "../../shared/ui/logo/Logo";
import Nav from "../../shared/ui/nav/Nav";
import NavLink from "../../shared/ui/nav/NavLink";
import Block from "../../shared/ui/block/Block";
import EventPublishAction from "../../widgets/event/event_publish_action/EventPublishAction";
import AppFooter from "../../widgets/app_footer/AppFooter";
import Container from "../../shared/ui/box/Container";
import IconLocation from '../../assets/icons/location_on_FILL0_wght400_GRAD0_opsz48.svg'
import IconCalendar from '../../assets/icons/event_FILL0_wght400_GRAD0_opsz48.svg'

import './eventPage.css'
import EventSlider from "../../widgets/event/event_slider/EventSlider";
import ToggleTheme from "../../widgets/toggle_them/ToggleTheme";
import TagsGroup from "../../shared/ui/tags_group/TagsGroup";
import TagsItem from "../../shared/ui/tags_group/TagsItem";
import BookCrossing from "../../widgets/book_crossing/BookCrossing";
import VoteTimer from "../../widgets/vote_timer/VoteTimer";
import ChooseBook from "../../widgets/choose_book/ChooseBook";
import Grid from "../../shared/ui/grid/Grid";
import Typography from "../../shared/ui/typography/Typography";
import CreateBook from "../../widgets/create_book/CreateBook";
import Card from "../../shared/ui/card/Card";

export default function EventPage(){

    const { authHandler, adaptiveHandler } = useAppContext();
    const { user, isAuthenticated, userLoading, isOffline } = authHandler;
    const { device } = adaptiveHandler;

    const navigate = useNavigate()

    const eventsInfo = {
        caption: '–ú–∏—Ç–∞–ø –¥–ª—è QA –∏–Ω–∂–µ–Ω–µ—Ä–æ–≤ –æ—Ç KoronaPay',
        description: `üåü Meetup: "–í–∏–∑—É–∞–ª–∏–∑–∞—Ü–∏—è –¥–∞–Ω–Ω—ã—Ö –ø—Ä–∏ –ø–æ–º–æ—â–∏ WebGL"
‚†Ä
üîç –•–æ—á–µ—à—å –ø–æ–≥—Ä—É–∑–∏—Ç—å—Å—è –≤ –º–∏—Ä –≤–∏–∑—É–∞–ª–∏–∑–∞—Ü–∏–∏ –¥–∞–Ω–Ω—ã—Ö –≤ –≤–µ–±–µ? –¢–æ–≥–¥–∞ —ç—Ç–æ—Ç –º–∏—Ç–∞–ø –∏–º–µ–Ω–Ω–æ –¥–ª—è —Ç–µ–±—è! –ü—Ä–∏—Å–æ–µ–¥–∏–Ω—è–π—Å—è –∫ –Ω–∞–º –∏ —É–∑–Ω–∞–π –≤—Å–µ –æ–± –æ—Å–æ–±–µ–Ω–Ω–æ—Å—Ç—è—Ö –∏ –ø—Ä–∏–º–µ–Ω–µ–Ω–∏–∏ WebGL.
‚†Ä
üéô–≠–∫—Å–ø–µ—Ä—Ç –≤ —ç—Ç–æ–π –æ–±–ª–∞—Å—Ç–∏ ‚Äì –†–æ–º–∞–Ω –ë–∞—à–∞—Ä–∏–Ω –ø–æ–¥–µ–ª–∏—Ç—Å—è –ø—Ä–∞–∫—Ç–∏—á–µ—Å–∫–∏–º–∏ –ø—Ä–∏–º–µ—Ä–∞–º–∏ –ø—Ä–∏–º–µ–Ω–µ–Ω–∏—è WebGL –≤ –ø—Ä–æ–µ–∫—Ç–∞—Ö –∏–∑ —Å—Ñ–µ—Ä—ã drug research.
‚†Ä
–†–æ–º–∞–Ω —É–∂–µ –±–æ–ª–µ–µ 10 –ª–µ—Ç –≤ IT, —Ä–∞–±–æ—Ç–∞–ª –Ω–∞–¥ –¥–µ—Å—è—Ç–∫–∞–º–∏ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–π –≤ —Å—Ñ–µ—Ä–∞—Ö –æ—Ç e-commerce –¥–æ —Ñ–æ–Ω–¥–æ–≤ –±–ª–∞–≥–æ—Ç–≤–æ—Ä–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏. –ù–∞–ø–∏—Å–∞–ª 5 —Å–æ–±—Å—Ç–≤–µ–Ω–Ω—ã—Ö —Ñ—Ä–µ–π–º–≤–æ—Ä–∫–æ–≤, –ø—Ä–µ–∂–¥–µ —á–µ–º –¥–æ—Å—Ç–∏–≥ –ø—Ä–æ—Å–≤–µ—Ç–ª–µ–Ω–∏—è –∏ –Ω–∞—á–∞–ª –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –≥–æ—Ç–æ–≤—ã–µ.
‚†Ä
üè¢ Quantori ‚Äî –≤–µ–¥—É—â–∞—è –º–µ–∂–¥—É–Ω–∞—Ä–æ–¥–Ω–∞—è IT-–∫–æ–º–ø–∞–Ω–∏—è –≤ –æ–±–ª–∞—Å—Ç–∏ –∑–¥—Ä–∞–≤–æ–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –∏ –º–µ–¥–∏—Ü–∏–Ω—Å–∫–æ–π –±–∏–æ–ª–æ–≥–∏–∏, —Å–æ–∑–¥–∞–µ—Ç –∏–Ω—Ç–µ–ª–ª–µ–∫—Ç—É–∞–ª—å–Ω—ã–µ –ø—Ä–æ–µ–∫—Ç—ã, –ø—Ä–∏–º–µ–Ω—è—è –∏–Ω–Ω–æ–≤–∞—Ü–∏–æ–Ω–Ω—ã–µ —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–∏ –∏ –Ω–∞—É—á–Ω—É—é —ç–∫—Å–ø–µ—Ä—Ç–∏–∑—É.
‚†Ä
–ù–µ —É–ø—É—Å—Ç–∏ —à–∞–Ω—Å —É–∑–Ω–∞—Ç—å –æ –ø–æ–ø—É–ª—è—Ä–Ω—ã—Ö —Å–ø–æ—Å–æ–±–∞—Ö –≤–∏–∑—É–∞–ª–∏–∑–∞—Ü–∏–∏ –¥–∞–Ω–Ω—ã—Ö –≤ web, –Ω–∞—É—á–∏—Ç—å—Å—è —Ä–∞–±–æ—Ç–∞—Ç—å —Å 3D –∏ WebGL, –∞ —Ç–∞–∫–∂–µ –ø–æ–≥—Ä—É–∑–∏—Ç—å—Å—è –≤ –º–∏—Ä Life Science —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏.
‚†Ä
‚ùóÔ∏è –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–π—Å—è –Ω–∞ –º–∏—Ç–∞–ø –ø–æ —Å—Å—ã–ª–∫–µ https://forms.amocrm.ru/rrdwvxm`,
        start_date: '21 —Å–µ–Ω—Ç—è–±—Ä—è',
        address: "Astana Hub (–ê—Å—Ç–∞–Ω–∞, –ø—Ä-—Ç. –ú–∞–Ω–≥–∏–ª–∏–∫ –ï–ª. 55/8, –ø–∞–≤–∏–ª—å–æ–Ω –°4.6), –∑–∞–ª Event hall",
        end_date: '31 –æ–∫—Ç—è–±—Ä—è',
        registration_deadline: '',
        cost: null
    }

    function toDisplayedLinkText(text) {
        if (text) {
            // –†–µ–≥—É–ª—è—Ä–Ω–æ–µ –≤—ã—Ä–∞–∂–µ–Ω–∏–µ –¥–ª—è –ø–æ–∏—Å–∫–∞ —Å—Å—ã–ª–∫–∏
            const linkRegex = /(https?:\/\/[^\s]+)/g;

            // –ó–∞–º–µ–Ω–∞ —Å—Å—ã–ª–æ–∫ –≤ —Ç–µ–∫—Å—Ç–µ –Ω–∞ —Å—Å—ã–ª–∫–∏ —Å —Ç–µ–≥–æ–º <a>
            let replacedText = text.replace(linkRegex, function (url) {
                return '<a href="' + url + '">' + url + '</a>';
            });
            // // –ó–∞–º–µ–Ω–∞ —Å–∏–º–≤–æ–ª–∞ –Ω–æ–≤–æ–π —Å—Ç—Ä–æ–∫–∏ (\n) –Ω–∞ —Ç–µ–≥ <br>
            // replacedText = replacedText.replace(/\n/g, '<br>');
            //
            // // –ó–∞–º–µ–Ω–∞ —Å–∏–º–≤–æ–ª–∞ —Ç–∞–±—É–ª—è—Ü–∏–∏ (\t) –Ω–∞ —Ç–µ–≥ <span> —Å CSS –∫–ª–∞—Å—Å–æ–º –¥–ª—è –æ—Ç—Å—Ç—É–ø–∞
            // replacedText = replacedText.replace(/\t/g, '<span class="tab"></span>');
            //
            // // –ó–∞–º–µ–Ω–∞ —Å–∏–º–≤–æ–ª–∞ –≤–æ–∑–≤—Ä–∞—Ç–∞ –∫–∞—Ä–µ—Ç–∫–∏ (\b) –Ω–∞ —Ç–µ–≥ <span> —Å CSS –∫–ª–∞—Å—Å–æ–º –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è —Å–∏–º–≤–æ–ª–∞
            // replacedText = replacedText.replace(/\b/g, '<span class="backspace"></span>');

            return replacedText
        }
    }

    const [books, setBooks] = useState([])

    function onBookOffered(bookOffer) {
        const newBooksArray = [...books, bookOffer];
        setBooks(newBooksArray)
    }

    useEffect(() => {
        console.log(books)
    }, [books])


    return (<>
        <AppBar padding={'10px'}>
            {device !== 'mobile' ? <GroupInline>
                    <Logo />
                    <Nav left={35}>
                        <NavLink text={'–ì–ª–∞–≤–Ω–∞—è'} onClick={e => navigate('/', {replace: true,})}/>
                        <NavLink text={'–ë–∏–±–ª–∏–æ—Ç–µ–∫–∞'} onClick={e => navigate('/event', {replace: true,})}/>
                        <NavLink text={'–ë–ª–æ–≥'}/>
                    </Nav>
                </GroupInline> : <>
                    <button onClick={e => {navigate(-1)}}>back</button>
                </>
            }

            <GroupInline>
                <ToggleTheme />
                {/*<Block left={20} width={'auto'}><EventPublishAction /></Block>*/}
                <Nav left={20}>
                    <NavLink text={'–í–æ–π—Ç–∏/–ó–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å—Å—è'} onClick={e => navigate('/authn', {replace: true,})}/>
                    {/*<NavLink text={''} onClick={e => navigate('/event', {replace: true,})}/>*/}
                </Nav>
            </GroupInline>
        </AppBar>
        <Box navbar={true} isDesktop={device === 'desktop'}>
            {/*<EventSlider photos={[1,2,3,4]}/>*/}


            <Container>
                <div className="event-page">


                    <Block>
                        <VoteTimer />
                    </Block>

                    <Block isAlignCenter={true} bottom={30}>
                        <Block maxWidth={600}>
                            <CreateBook onChosenBook={onBookOffered} />
                        </Block>
                    </Block>

                    <Block isAlignCenter={true}>
                        <Block isAlignCenter={true}>
                            <span>
                                <Typography align={'center'} size={16} color={'grey'} weight={500}>–ü—Ä–µ–¥–ª–æ–∂–µ–Ω–æ –∫–Ω–∏–≥: </Typography>
                                <Typography align={'center'} size={16} color={'black'} weight={500}>{books.length}</Typography>
                            </span>
                        </Block>

                        {books.length > 0 &&
                            <Block bottom={10}></Block>
                        }
                        {books.length < 1 &&
                            <Block isAlignCenter={true} bottom={15}>
                                <Block bottom={20}></Block>
                                <Typography align={'center'} size={21} weight={500} color={'grey'}>–ë—É–¥—å—Ç–µ –ø–µ—Ä–≤—ã–º! –ü—Ä–µ–¥–ª–æ–∂–∏—Ç–µ –∫–Ω–∏–≥—É</Typography>
                            </Block>
                        }

                        <Grid isForBooks={true}>
                            {books.map((book, index) => {
                                return (
                                    <ChooseBook item={book} key={index} />
                                )
                            })}
                        </Grid>
                    </Block>

                    {/*<div className="event-page__title">{eventsInfo?.caption}</div>*/}
                    {/*<TagsGroup>*/}
                    {/*    <TagsItem label={'category1'}/>*/}
                    {/*    <TagsItem label={'category2'}/>*/}
                    {/*    <TagsItem label={'category3'}/>*/}
                    {/*    <TagsItem label={'category4'}/>*/}
                    {/*    <TagsItem label={'category5'}/>*/}
                    {/*</TagsGroup>*/}
                    {/*/!*<BookCrossing />*!/*/}
                    {/*<div className="event-page-row">*/}
                    {/*    <div className="event-page-block">*/}
                    {/*        <div className="event-page-block__icon">*/}
                    {/*            <IconLocation width={25} height={25} />*/}
                    {/*        </div>*/}
                    {/*        <div className="event-page-block__text">*/}
                    {/*            {eventsInfo?.address}*/}
                    {/*        </div>*/}
                    {/*    </div>*/}
                    {/*    <div className="event-page-block">*/}
                    {/*        <div className="event-page-block__icon">*/}
                    {/*            <IconCalendar width={25} height={25} />*/}
                    {/*        </div>*/}
                    {/*        <div className="event-page-block__text">*/}
                    {/*            {eventsInfo?.start_date} {eventsInfo?.end_date && ' - '+eventsInfo?.end_date}*/}
                    {/*        </div>*/}
                    {/*    </div>*/}
                    {/*</div>*/}
                    {/*/!*<div className="event-page-block">*!/*/}
                    {/*/!*    <div className="event-page-block__icon">*!/*/}

                    {/*/!*    </div>*!/*/}
                    {/*/!*    <div className="event-page-block__text">*!/*/}

                    {/*/!*    </div>*!/*/}
                    {/*/!*</div>*!/*/}
                    {/*<div className="event-page-description">*/}
                    {/*    <div className="event-page-description__title">*/}
                    {/*        –û–ø–∏—Å–∞–Ω–∏–µ*/}
                    {/*    </div>*/}
                    {/*    <div className="event-page-description__text"*/}
                    {/*         dangerouslySetInnerHTML={{ __html: toDisplayedLinkText(eventsInfo?.description) }}*/}
                    {/*    >*/}
                    {/*        /!*<pre>*!/*/}
                    {/*        /!*    {toDisplayedLinkText(eventsInfo?.description)}*!/*/}
                    {/*        /!*</pre>*!/*/}
                    {/*    </div>*/}
                    {/*</div>*/}
                    {/*/!*<EventPageHeader />*!/*/}
                </div>
            </Container>
        </Box>
        <AppFooter />
    </>)
}
